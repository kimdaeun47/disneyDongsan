<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.disney.admin.dao.AdminGoodsDAO">


	<!-- 게시판 리스트 기본 조회 -->
	<sql id="goodsSearch">
		<if test="search=='g_name'">
				<![CDATA[ g_name LIKE '%'|| #{keyword} ||'%' ]]>
		</if>
		<if test="search=='g_detail'">
				<![CDATA[ g_detail LIKE '%'|| #{keyword} ||'%' ]]>
		</if>
	</sql>
	
	<select id="goodsList" parameterType="goods" resultType="goods">
		<![CDATA[
		select
        g_id, g_name, g_detail, g_price, g_date, g_image
        FROM( select rownum as rnum, g_id, g_name, g_detail, g_price, g_date, g_image
                from goods 
                where]]>
                
        <trim prefix="(" suffix=")AND" prefixOverrides="AND">
        	<include refid ="goodsSearch"></include>      
        </trim>
        <![CDATA[rownum <= #{pageNum} * #{amount}	
                ) goodslist
            where rnum > (#{pageNum}-1)* #{amount}        
        ]]>
        
        order by g_id desc
	</select>
	
	<!-- 전체 레코드 수 조회 -->
	<select id="goodsListCnt" parameterType="goods" resultType="int">
      SELECT count(*) FROM goods 
      <trim prefix=" where(" suffix=")">
         <include refid="goodsSearch"></include>
      </trim>
   </select>
   
   
   <!-- 상세 조회 -->
   <select id="goodsDetail" parameterType="goods" resultType="goods">
   		SELECT
   			g_id, g_name, g_detail, g_price, g_origin, g_company, g_delivery, g_date, g_image, g_image_detail
   		FROM goods
   		WHERE g_id = #{g_id}
   </select>
   
   
   <!-- 상품 등록 -->
   <insert id="goodsInsert" parameterType="goods">
   	/* Goods - goodsInsert */
   		<selectKey keyProperty="g_id" resultType="int" order="BEFORE">
   			select goods_seq.nextval from dual
   		</selectKey>
   		
   		INSERT INTO goods(g_id, g_name, g_detail, g_price, g_origin, g_company, g_delivery, g_date, g_image, g_image_detail)
   		VALUES(#{g_id}, #{g_name}, #{g_detail}, #{g_price}, #{g_origin}, #{g_company}, #{g_delivery}, sysdate, #{g_image}, #{g_image_detail})
   </insert>
   
   
   
   <!-- 상품 수정 -->
   <update id="goodsUpdate" parameterType="goods">
   		UPDATE goods
   		SET g_name = #{g_name},
   			g_detail = #{g_detail},
   			g_price = #{g_price},
   			g_origin = #{g_origin},
   			g_company = #{g_company},
   			g_delivery = #{g_delivery},
   			g_date = sysdate
   			<if test="g_image != ''">
				, g_image = #{g_image}
			</if>
			<if test="g_image_detail != ''">
				, g_image_detail = #{g_image_detail}
			</if>
   		WHERE g_id = #{g_id}
   </update>
   
   
   
   <!-- 삭제 -->
   <delete id="goodsDelete" parameterType="goods">
   		DELETE FROM goods WHERE g_id = #{g_id}
   </delete>
   
   
   
   
   
   
   
   <!-- 모든 유저의 주문 목록 -->
	<select id="orderList" resultType="orderPay">
	 select
	     g_order_id, member_name, member_id,
	     member_addr1, member_addr2, member_addr3,
	     delivery_cost, g_order_date, g_order_state
	 from g_order
	</select>
	
	<!-- 특정 주문 목록 -->
	<select id="orderView" resultType="orderDetailPay">
	 select
	     o.g_order_id, o.member_name, o.member_id,
	     o.member_addr1, o.member_addr2, o.member_addr3,
	     o.delivery_cost, o.g_order_date, o.g_order_state,
	     d.g_order_detail_id, d.g_count, d.g_price, d.g_id,
	     g.g_name, g.g_image
	 from g_order o
	         inner join g_order_detail d
	             on o.g_order_id = d.g_order_id
	         inner join goods g
	         	 on d.g_id = g.g_id
	     where o.g_order_id = #{g_order_id}
	     
	     order by g_id desc
	</select>
   
   <!-- 배송 상태 -->
	<update id="delivery">
	 update g_order
	     set g_order_state = #{g_order_state}
	 where g_order_id = #{g_order_id}
	</update>
   
   
   
   
   
   
   

</mapper>